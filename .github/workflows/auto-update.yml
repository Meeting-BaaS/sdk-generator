name: Auto Update SDK

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual trigger

concurrency:
  group: auto-update-sdk-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check-changes.outputs.has_changes }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need full history for version comparison

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Regenerate SDK
        run: |
          echo "Regenerating SDK with latest OpenAPI specification..."
          pnpm openapi:rebuild
          pnpm build
          echo "SDK regenerated successfully"

      - name: Check for actual changes
        id: check-changes
        run: |
          echo "Checking for actual file changes..."
          if git diff --quiet; then
            echo "No changes detected in generated files"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in generated files"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changed files:"
            git diff --name-only
          fi

  test:
    if: needs.check-and-update.outputs.has_changes == 'true'
    uses: ./.github/workflows/test-sdk.yml
    needs: check-and-update
    with:
      node-versions: '[18, 19, 20, 21, 22]'
      upload-coverage: 'false'

  bump-version-and-publish:
    if: needs.check-and-update.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    needs: [check-and-update, test]
    outputs:
      new_version: ${{ steps.bump-version.outputs.new_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump patch version
        id: bump-version
        run: |
          # Get current version
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"

          # Bump patch version
          NEW_VERSION=$(pnpm version patch --no-git-tag-version)
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit and push changes
        run: |
          git add .
          git commit -m "chore: auto-update SDK to ${{ steps.bump-version.outputs.new_version }} [skip ci]"
          git push origin main

      - name: Publish to npm
        run: pnpm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-release:
    if: needs.check-and-update.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    needs: [check-and-update, bump-version-and-publish]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.bump-version-and-publish.outputs.new_version }}
          release_name: Release ${{ needs.bump-version-and-publish.outputs.new_version }}
          body: |
            ðŸ¤– Auto-generated release

            This release was automatically generated due to changes in the Meeting BaaS API specification.

            ## Changes
            - Updated SDK to match latest API specification
            - All tests passing across Node.js versions 18, 19, 20, 21, and 22

            ## Testing
            - âœ… Node.js 18
            - âœ… Node.js 19
            - âœ… Node.js 20
            - âœ… Node.js 21
            - âœ… Node.js 22
          draft: false
          prerelease: false
