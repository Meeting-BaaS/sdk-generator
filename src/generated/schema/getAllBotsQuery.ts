/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Meeting BaaS API
 * Meeting BaaS API
 * OpenAPI spec version: 1.1
 */
import type { GetAllBotsQueryAccountId } from "./getAllBotsQueryAccountId"
import type { GetAllBotsQueryBotUuid } from "./getAllBotsQueryBotUuid"
import type { GetAllBotsQueryCreatorEmailContains } from "./getAllBotsQueryCreatorEmailContains"
import type { GetAllBotsQueryDiarizationV2 } from "./getAllBotsQueryDiarizationV2"
import type { GetAllBotsQueryEndDate } from "./getAllBotsQueryEndDate"
import type { GetAllBotsQueryExtraContains } from "./getAllBotsQueryExtraContains"
import type { GetAllBotsQueryMeetingUrl } from "./getAllBotsQueryMeetingUrl"
import type { GetAllBotsQueryMeetingUrlContains } from "./getAllBotsQueryMeetingUrlContains"
import type { GetAllBotsQueryReserved } from "./getAllBotsQueryReserved"
import type { GetAllBotsQueryStartDate } from "./getAllBotsQueryStartDate"
import type { GetAllBotsQueryStatus } from "./getAllBotsQueryStatus"
import type { GetAllBotsQueryStatusCategory } from "./getAllBotsQueryStatusCategory"
import type { GetAllBotsQueryStatusPriority } from "./getAllBotsQueryStatusPriority"
import type { GetAllBotsQueryStatusType } from "./getAllBotsQueryStatusType"
import type { GetAllBotsQueryUserReportedErrorContains } from "./getAllBotsQueryUserReportedErrorContains"
import type { GetAllBotsQueryUserReportedErrorJson } from "./getAllBotsQueryUserReportedErrorJson"

/**
 * Query parameters for getting all bots
 */
export interface GetAllBotsQuery {
  /** Filter by account ID (comma-separated for multiple values)

Example: "1,2,3" will match bots from accounts 1, 2, or 3 */
  account_id?: GetAllBotsQueryAccountId
  /** Filter by bot UUID (comma-separated for multiple values)

Example: "123e4567-e89b-12d3-a456-426614174000,987fcdeb-51d3-a456-426614174000" */
  bot_uuid?: GetAllBotsQueryBotUuid
  /** Filter by creator email containing any of these texts (comma-separated)

Example: "john,doe" will match emails containing either "john" or "doe" */
  creator_email_contains?: GetAllBotsQueryCreatorEmailContains
  /** Filter by diarization v2 status (comma-separated for multiple values)

Example: "true,false" will match both diarization v2 and non-diarization v2 bots */
  diarization_v2?: GetAllBotsQueryDiarizationV2
  /** Filter by end date */
  end_date?: GetAllBotsQueryEndDate
  /** Filter by extra JSON containing any of these texts (comma-separated)

Example: "customer_id,project" will match extra JSON containing either "customer_id" or "project" */
  extra_contains?: GetAllBotsQueryExtraContains
  /** Limit for pagination */
  limit: number
  /** Filter by exact meeting URL (comma-separated for multiple values)

Example: "https://meet.google.com/abc-def,https://zoom.us/j/123456" */
  meeting_url?: GetAllBotsQueryMeetingUrl
  /** Filter by meeting URL containing any of these texts (comma-separated)

Example: "meet.google.com,zoom.us" will match URLs containing either "meet.google.com" or "zoom.us" */
  meeting_url_contains?: GetAllBotsQueryMeetingUrlContains
  /** Offset for pagination */
  offset: number
  /** Filter by reserved status (comma-separated for multiple values)

Example: "true,false" will match both reserved and non-reserved bots */
  reserved?: GetAllBotsQueryReserved
  /** Filter by start date */
  start_date?: GetAllBotsQueryStartDate
  /** Filter by user-reported status (comma-separated for multiple values)

Example: "open,in_progress,closed" will match bots with any of these user-reported statuses */
  status?: GetAllBotsQueryStatus
  /** Filter by status category (comma-separated for multiple values)

Example: "system_error,auth_error,connection_error" will match bots with any of these categories

Common categories are: - system_error: Internal system issues - auth_error: Authentication and authorization issues - connection_error: Network and meeting connection issues - permission_error: Access and permission issues - input_error: Invalid input parameters - webhook_error: Webhook delivery issues - duplicate_error: Duplicate meeting or bot issues - unknown_error: Unclassified errors */
  status_category?: GetAllBotsQueryStatusCategory
  /** Filter by status priority (comma-separated for multiple values)

Example: "critical,high,medium,low" will match bots with any of these priorities

Priorities are: - critical: System errors requiring immediate attention - high: Serious issues that prevent meeting functionality - medium: Issues that affect functionality but not critically - low: Minor issues that don't greatly impact functionality - none: For success states */
  status_priority?: GetAllBotsQueryStatusPriority
  /** Filter by status type (comma-separated for multiple values)

Example: "success,error,warning,pending" will match bots with any of these status types

Status types are: - success: Bot completed successfully or is in progress - error: Bot encountered a system error - warning: Bot has a non-critical issue - pending: Bot is waiting to start */
  status_type?: GetAllBotsQueryStatusType
  /** Filter by user reported error containing any of these texts (comma-separated)

Example: "failed,error" will match errors containing either "failed" or "error" */
  user_reported_error_contains?: GetAllBotsQueryUserReportedErrorContains
  /** Filter by user reported error JSON (comma-separated for multiple conditions)

Example: '{"status":"open"},{"priority":"high"}' will match bots with either status open or priority high */
  user_reported_error_json?: GetAllBotsQueryUserReportedErrorJson
}
