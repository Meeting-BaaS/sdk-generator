/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Meeting BaaS API
 * Meeting BaaS API
 * OpenAPI spec version: 1.1
 */

import type { BotParam } from "./botParam"
import type { BotStatusResponse } from "./botStatusResponse"
import type { BotWithStatusAccountEmail } from "./botWithStatusAccountEmail"
import type { BotWithStatusDiarizationFails } from "./botWithStatusDiarizationFails"
import type { BotWithStatusErrors } from "./botWithStatusErrors"
import type { BotWithStatusEventId } from "./botWithStatusEventId"
import type { BotWithStatusScheduledBotId } from "./botWithStatusScheduledBotId"
import type { BotWithStatusSessionId } from "./botWithStatusSessionId"
import type { BotWithStatusTranscriptionFails } from "./botWithStatusTranscriptionFails"
import type { DateTime } from "./dateTime"
import type { OptionalDateTime } from "./optionalDateTime"

/**
 * Bot information with status metadata

This struct combines the bot data with status information optimized for UI display.
 */
export interface BotWithStatus {
  /** The email of the account owner (only included for special domain users) */
  account_email?: BotWithStatusAccountEmail
  /** The account that owns this bot */
  account_id: number
  /** ID of the bot parameters used */
  bot_param_id: number
  /** When the bot was created */
  created_at: DateTime
  /** Number of diarization failures */
  diarization_fails?: BotWithStatusDiarizationFails
  /** Whether diarization v2 is enabled */
  diarization_v2: boolean
  /** Duration of the recording in seconds */
  duration: number
  /** When the bot ended recording */
  ended_at: OptionalDateTime
  /** Any error messages */
  errors?: BotWithStatusErrors
  /** ID of the calendar event if scheduled */
  event_id?: BotWithStatusEventId
  /** The bot's unique identifier */
  id: number
  /** The meeting URL this bot is recording */
  meeting_url: string
  /** Path to the MP4 file in S3 */
  mp4_s3_path: string
  /** Bot parameters */
  params: BotParam
  /** Whether this bot is reserved */
  reserved: boolean
  /** ID of the scheduled bot if scheduled */
  scheduled_bot_id?: BotWithStatusScheduledBotId
  /** The session ID for this bot instance */
  session_id?: BotWithStatusSessionId
  /** Frontend-friendly status information for display and sorting */
  status: BotStatusResponse
  /** Number of transcription failures */
  transcription_fails?: BotWithStatusTranscriptionFails
  /** User reported error information */
  user_reported_error?: unknown
  /** Unique identifier for this bot */
  uuid: string
}
